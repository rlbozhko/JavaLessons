Позволяет не плодить конструкторы,


-В билдере обычно обьявляют такой же набор полей , что и в создаваемом обьекте,
 т.к. наследование не логично,
 а ассоциация может быть затратна на создание ассоциированного обьекта

-обрати внимание что благодаря return this;  в  методах билдера
прим.
    CarBuilder buildSpeed(int speed) {
        this.maxSpeed = speed;
        return this;
    }

    можно использовать сцепленный вызов и это красиво ( а не надо рожать(перезагружать overload)
    по конструктору
    под каждый вариант инициализирующих и дефолтных параметров для создания Car
    ! а также не надо плодить конструкторы под различные сочетания ,
    различных сложных сеттеров

          Car bmw = new CarBuilder()
                   .buildName("BMW")
                   .buildSpeed(200)
                   .buildTransmission(Transmission.AUTO)
                   .build();


    в new CarBuilder() - сетаются дефолтные значения по сути на параметры
    которые потом будут использоваться при создании Car
    а дальше их как-будто пересетают , а потом уже с готовым пересетанным
    параметрами вызывают конструктор Car

 ---
    override - переопределение , возможно только в паре с наследованием
    overload - перезагрузка возможно без наследования , возможно с наследованием,
    определяется типом и числом аргументов метода.
---