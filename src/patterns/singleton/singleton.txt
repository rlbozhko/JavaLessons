Синглтон (один обьект для всех)+
конструктор private
а для выдачи инстансов есть специальный отдельный метод
 public static Singleton getInstance(int age) {
        if (Objects.isNull(object)) {
            object = new Singleton(age);
        }
        return object;
    }
суть в том , что если инстанс уже существует то ссылку на него и возвращаем, если не существует то создаем,
в некоторых реализациях учитывают многопоточность.



сравнение с другим путем похожей реализации:
    Евнух(я придумал название) класс - который имеет только статические поля и методы
    - статич поля особо не отличаются от нестатических кроме того из каких обьектов они доступны
    - статический метод не имеет доступа к this  и к нестатическим полям
    - статические методы  не могут быть переопределены в наследниках ( переопределены подклассами).
---  Соотв если сравнивать "Евнух" и синглтон - то у синглтона нет недостатков статики
( нельзя использовать наследование по сути и реализовывать интерфейсы)
